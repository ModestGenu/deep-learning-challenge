{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPBiF7KbWMmiX1QnA9gtdv/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":6,"metadata":{"id":"QYwOgN7Ri6SW","executionInfo":{"status":"ok","timestamp":1715569003094,"user_tz":300,"elapsed":1065,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}}},"outputs":[],"source":["# Import our dependencies\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","import pandas as pd\n","import tensorflow as tf\n","\n","#  Import and read the charity_data.csv.\n","import pandas as pd\n","applications_df = pd.read_csv(\"https://static.bc-edx.com/data/dl-1-2/m21/lms/starter/charity_data.csv\")\n"]},{"cell_type":"code","source":["# how many unique values does each column have?\n","applications_df.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YeTJZY6hv14W","executionInfo":{"status":"ok","timestamp":1715569004008,"user_tz":300,"elapsed":118,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}},"outputId":"d5c88d5c-1cb1-46c4-dafd-bf48db0b7f24"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["EIN                       34299\n","NAME                      19568\n","APPLICATION_TYPE             17\n","AFFILIATION                   6\n","CLASSIFICATION               71\n","USE_CASE                      5\n","ORGANIZATION                  4\n","STATUS                        2\n","INCOME_AMT                    9\n","SPECIAL_CONSIDERATIONS        2\n","ASK_AMT                    8747\n","IS_SUCCESSFUL                 2\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# try to determine which columns could create a good model\n","#name = applications_df['NAME'].value_counts()\n","#name[name>40]\n","classification = applications_df['CLASSIFICATION'].value_counts()\n","classification[classification>100]\n","use_case = applications_df['USE_CASE'].value_counts()\n","use_case[use_case>100]\n","#organization= applications_df['ORGANIZATION'].value_counts()\n","#organization[organization>100]\n","income=applications_df['INCOME_AMT'].value_counts()\n","income[income>1000]\n","#con =applications_df['SPECIAL_CONSIDERATIONS'].value_counts()\n","#con[con>100]\n","ask = applications_df['ASK_AMT'].value_counts()\n","ask[ask<2]\n","active = applications_df['STATUS'].value_counts()\n","active[active>10]\n","#succ= applications_df['IS_SUCCESSFUL'].value_counts()\n","#EIN = applications_df['EIN'].value_counts()\n","types = applications_df['APPLICATION_TYPE'].value_counts()\n","types[types>1000]\n","#aff = applications_df['AFFILIATION'].value_counts()\n","#aff[aff>100]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cWLMmMTDwQsQ","executionInfo":{"status":"ok","timestamp":1715569005822,"user_tz":300,"elapsed":119,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}},"outputId":"8a5e627c-d065-4758-9657-8d6a4b516ab8"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["APPLICATION_TYPE\n","T3     27037\n","T4      1542\n","T6      1216\n","T5      1173\n","T19     1065\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Drop the non-beneficial ID columns, 'EIN' and 'NAME'\n","applications_df =  applications_df.drop(columns=[\"EIN\", \"NAME\", \"AFFILIATION\", \"ORGANIZATION\", \"SPECIAL_CONSIDERATIONS\"])\n","\n","#cutoff values in columns according to findings\n","class_delete = list(classification[classification<100].index)\n","case_delete = list(use_case[use_case<100].index)\n","#org_delete = list(organization[organization<100].index)\n","income_delete = list(income[income<1000].index)\n","#con_delete = list(con[con<100].index)\n","active_delete = list(active[active<10].index)\n","type_delete = list(types[types<1000].index)\n","#aff_delete = list(aff[aff<100].index)\n","ask_delete = list(ask[ask>2].index)\n","#name_delete = list(name[name<100])"],"metadata":{"id":"B87ruzoxu7xT","executionInfo":{"status":"ok","timestamp":1715569016640,"user_tz":300,"elapsed":148,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["for cla in class_delete:\n","    applications_df['CLASSIFICATION'] = applications_df['CLASSIFICATION'].replace(cla,\"Other\")\n","#for na in name_delete:\n"," #   applications_df['NAME'] = applications_df['NAME'].replace(na,\"Other\")\n","for a in ask_delete:\n","    applications_df['ASK_AMT'] = applications_df['ASK_AMT'].replace(a,\"Other\")\n","for cas in case_delete:\n","    applications_df['USE_CASE'] = applications_df['USE_CASE'].replace(cas,\"Other\")\n","#for org in case_delete:\n","#    applications_df['ORGANIZATION'] = applications_df['ORGANIZATION'].replace(org,\"Other\")\n","for inc in income_delete:\n","    applications_df['INCOME_AMT'] = applications_df['INCOME_AMT'].replace(inc,\"Other\")\n","#for cons in con_delete:\n","#    applications_df['SPECIAL_CONSIDERATIONS'] = applications_df['SPECIAL_CONSIDERATIONS'].replace(cons,\"Other\")\n","for inc in active_delete:\n","    applications_df['STATUS'] = applications_df['STATUS'].replace(inc,\"Other\")\n","for types in type_delete:\n","    applications_df['APPLICATION_TYPE'] = applications_df['APPLICATION_TYPE'].replace(types,\"Other\")\n","#for aff in aff_delete:\n","#    applications_df['AFFILIATION'] = applications_df['AFFILIATION'].replace(aff,\"Other\")"],"metadata":{"id":"JD9grGxmL2nu","executionInfo":{"status":"ok","timestamp":1715569079273,"user_tz":300,"elapsed":894,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["#check how many unique values are left\n","applications_df.nunique()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BNvLxYJkSKUW","executionInfo":{"status":"ok","timestamp":1715569081965,"user_tz":300,"elapsed":98,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}},"outputId":"79f14f9c-f606-4422-a357-d4b620ae04fa"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["APPLICATION_TYPE       6\n","CLASSIFICATION        12\n","USE_CASE               5\n","STATUS                 2\n","INCOME_AMT             4\n","ASK_AMT             8743\n","IS_SUCCESSFUL          2\n","dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# convert categorical data to numeric\n","applications_df = pd.get_dummies(applications_df)\n","applications_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"id":"qNaJBkbxUuDB","executionInfo":{"status":"ok","timestamp":1715569086847,"user_tz":300,"elapsed":2181,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}},"outputId":"c21fc8a1-54ae-4067-bd32-581b8f1f6bbd"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   IS_SUCCESSFUL  APPLICATION_TYPE_Other  APPLICATION_TYPE_T19  \\\n","0              1                    True                 False   \n","1              1                   False                 False   \n","2              0                   False                 False   \n","3              1                   False                 False   \n","4              1                   False                 False   \n","\n","   APPLICATION_TYPE_T3  APPLICATION_TYPE_T4  APPLICATION_TYPE_T5  \\\n","0                False                False                False   \n","1                 True                False                False   \n","2                False                False                 True   \n","3                 True                False                False   \n","4                 True                False                False   \n","\n","   APPLICATION_TYPE_T6  CLASSIFICATION_C1000  CLASSIFICATION_C1200  \\\n","0                False                  True                 False   \n","1                False                 False                 False   \n","2                False                 False                 False   \n","3                False                 False                 False   \n","4                False                  True                 False   \n","\n","   CLASSIFICATION_C1270  ...  ASK_AMT_1736232349  ASK_AMT_1893400128  \\\n","0                 False  ...               False               False   \n","1                 False  ...               False               False   \n","2                 False  ...               False               False   \n","3                 False  ...               False               False   \n","4                 False  ...               False               False   \n","\n","   ASK_AMT_2264109450  ASK_AMT_2310256039  ASK_AMT_3391919220  \\\n","0               False               False               False   \n","1               False               False               False   \n","2               False               False               False   \n","3               False               False               False   \n","4               False               False               False   \n","\n","   ASK_AMT_4653011914  ASK_AMT_5591584994  ASK_AMT_8556638692  \\\n","0               False               False               False   \n","1               False               False               False   \n","2               False               False               False   \n","3               False               False               False   \n","4               False               False               False   \n","\n","   ASK_AMT_8597806340  ASK_AMT_Other  \n","0               False           True  \n","1               False          False  \n","2               False           True  \n","3               False          False  \n","4               False          False  \n","\n","[5 rows x 8773 columns]"],"text/html":["\n","  <div id=\"df-b1701871-3cdc-4818-8c14-9962815e1378\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>IS_SUCCESSFUL</th>\n","      <th>APPLICATION_TYPE_Other</th>\n","      <th>APPLICATION_TYPE_T19</th>\n","      <th>APPLICATION_TYPE_T3</th>\n","      <th>APPLICATION_TYPE_T4</th>\n","      <th>APPLICATION_TYPE_T5</th>\n","      <th>APPLICATION_TYPE_T6</th>\n","      <th>CLASSIFICATION_C1000</th>\n","      <th>CLASSIFICATION_C1200</th>\n","      <th>CLASSIFICATION_C1270</th>\n","      <th>...</th>\n","      <th>ASK_AMT_1736232349</th>\n","      <th>ASK_AMT_1893400128</th>\n","      <th>ASK_AMT_2264109450</th>\n","      <th>ASK_AMT_2310256039</th>\n","      <th>ASK_AMT_3391919220</th>\n","      <th>ASK_AMT_4653011914</th>\n","      <th>ASK_AMT_5591584994</th>\n","      <th>ASK_AMT_8556638692</th>\n","      <th>ASK_AMT_8597806340</th>\n","      <th>ASK_AMT_Other</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 8773 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1701871-3cdc-4818-8c14-9962815e1378')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b1701871-3cdc-4818-8c14-9962815e1378 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b1701871-3cdc-4818-8c14-9962815e1378');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d893bd5c-2655-4f10-9f93-1a024859dcdd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d893bd5c-2655-4f10-9f93-1a024859dcdd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d893bd5c-2655-4f10-9f93-1a024859dcdd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"applications_df"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# Split our preprocessed data into our features and target arrays\n","X = applications_df.drop(columns=[\"IS_SUCCESSFUL\"]).values\n","y = applications_df[\"IS_SUCCESSFUL\"].values\n","# Split the preprocessed data into a training and testing dataset\n","X_train, X_test, y_train, y_test = train_test_split(X, y)"],"metadata":{"id":"TqDIMT5oVbzd","executionInfo":{"status":"ok","timestamp":1715569094960,"user_tz":300,"elapsed":5666,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# Create a StandardScaler instances\n","scaler = StandardScaler()\n","\n","# Fit the StandardScaler\n","X_scaler = scaler.fit(X_train)\n","\n","# Scale the data\n","X_train_scaled = X_scaler.transform(X_train)\n","X_test_scaled = X_scaler.transform(X_test)"],"metadata":{"id":"evnohcVRVpiB","executionInfo":{"status":"ok","timestamp":1715569100018,"user_tz":300,"elapsed":5060,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["# Define the model - deep neural net, i.e., the number of input features and hidden nodes for each layer.\n","\n","number_input_feature = len(X_train_scaled[0])\n","hidden_nodes_layers1 = 100\n","hidden_nodes_layers2 = 30\n","hidden_nodes_layers3 = 10\n","\n","nn = tf.keras.models.Sequential()\n","\n","# First hidden layer\n","nn.add(tf.keras.layers.Dense(units = hidden_nodes_layers1, input_dim = number_input_feature, activation = \"relu\"))\n","\n","# Second hidden layer\n","nn.add(tf.keras.layers.Dense(units = hidden_nodes_layers2, activation = \"sigmoid\"))\n","\n","nn.add(tf.keras.layers.Dense(units = hidden_nodes_layers3, activation = \"sigmoid\"))\n","\n","# Output layer\n","\n","nn.add(tf.keras.layers.Dense(units = 1, activation = \"sigmoid\"))\n","\n","# Check the structure of the model\n","nn.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CwyGlUl3WCfH","executionInfo":{"status":"ok","timestamp":1715569103408,"user_tz":300,"elapsed":530,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}},"outputId":"58f7617d-50b6-4363-c2c7-27e60e640842"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 100)               877300    \n","                                                                 \n"," dense_1 (Dense)             (None, 30)                3030      \n","                                                                 \n"," dense_2 (Dense)             (None, 10)                310       \n","                                                                 \n"," dense_3 (Dense)             (None, 1)                 11        \n","                                                                 \n","=================================================================\n","Total params: 880651 (3.36 MB)\n","Trainable params: 880651 (3.36 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["# Compile the model\n","nn.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])"],"metadata":{"id":"WDH4Hs4lWmg9","executionInfo":{"status":"ok","timestamp":1715569114746,"user_tz":300,"elapsed":356,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# Train the model\n","fit_model = nn.fit(X_train_scaled, y_train, epochs=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nkxO0R6SWuPi","executionInfo":{"status":"ok","timestamp":1715570410201,"user_tz":300,"elapsed":1286585,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}},"outputId":"0e7f2eec-f223-4bce-a123-49d8b74982da"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","804/804 [==============================] - 14s 16ms/step - loss: 0.6564 - accuracy: 0.6033\n","Epoch 2/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.5113 - accuracy: 0.7262\n","Epoch 3/100\n","804/804 [==============================] - 14s 18ms/step - loss: 0.4815 - accuracy: 0.7266\n","Epoch 4/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4753 - accuracy: 0.7294\n","Epoch 5/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4713 - accuracy: 0.7268\n","Epoch 6/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4687 - accuracy: 0.7255\n","Epoch 7/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4666 - accuracy: 0.7287\n","Epoch 8/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4651 - accuracy: 0.7286\n","Epoch 9/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4642 - accuracy: 0.7290\n","Epoch 10/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4631 - accuracy: 0.7295\n","Epoch 11/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4631 - accuracy: 0.7294\n","Epoch 12/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4622 - accuracy: 0.7293\n","Epoch 13/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4620 - accuracy: 0.7305\n","Epoch 14/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4619 - accuracy: 0.7276\n","Epoch 15/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4615 - accuracy: 0.7298\n","Epoch 16/100\n","804/804 [==============================] - 15s 19ms/step - loss: 0.4614 - accuracy: 0.7290\n","Epoch 17/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4609 - accuracy: 0.7300\n","Epoch 18/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4608 - accuracy: 0.7300\n","Epoch 19/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4604 - accuracy: 0.7301\n","Epoch 20/100\n","804/804 [==============================] - 15s 18ms/step - loss: 0.4605 - accuracy: 0.7299\n","Epoch 21/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4603 - accuracy: 0.7280\n","Epoch 22/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4599 - accuracy: 0.7292\n","Epoch 23/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4602 - accuracy: 0.7318\n","Epoch 24/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4597 - accuracy: 0.7298\n","Epoch 25/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4601 - accuracy: 0.7281\n","Epoch 26/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4598 - accuracy: 0.7301\n","Epoch 27/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4600 - accuracy: 0.7304\n","Epoch 28/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4594 - accuracy: 0.7331\n","Epoch 29/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4598 - accuracy: 0.7317\n","Epoch 30/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4594 - accuracy: 0.7301\n","Epoch 31/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4593 - accuracy: 0.7300\n","Epoch 32/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4589 - accuracy: 0.7291\n","Epoch 33/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4589 - accuracy: 0.7322\n","Epoch 34/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4592 - accuracy: 0.7314\n","Epoch 35/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4588 - accuracy: 0.7307\n","Epoch 36/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4591 - accuracy: 0.7310\n","Epoch 37/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4586 - accuracy: 0.7329\n","Epoch 38/100\n","804/804 [==============================] - 13s 17ms/step - loss: 0.4594 - accuracy: 0.7315\n","Epoch 39/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4594 - accuracy: 0.7294\n","Epoch 40/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4589 - accuracy: 0.7296\n","Epoch 41/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4591 - accuracy: 0.7320\n","Epoch 42/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4588 - accuracy: 0.7321\n","Epoch 43/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4588 - accuracy: 0.7308\n","Epoch 44/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4581 - accuracy: 0.7308\n","Epoch 45/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4585 - accuracy: 0.7312\n","Epoch 46/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4581 - accuracy: 0.7327\n","Epoch 47/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4579 - accuracy: 0.7325\n","Epoch 48/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4579 - accuracy: 0.7313\n","Epoch 49/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4583 - accuracy: 0.7333\n","Epoch 50/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4580 - accuracy: 0.7313\n","Epoch 51/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4576 - accuracy: 0.7315\n","Epoch 52/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4577 - accuracy: 0.7307\n","Epoch 53/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4577 - accuracy: 0.7319\n","Epoch 54/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4575 - accuracy: 0.7319\n","Epoch 55/100\n","804/804 [==============================] - 14s 18ms/step - loss: 0.4583 - accuracy: 0.7308\n","Epoch 56/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4572 - accuracy: 0.7318\n","Epoch 57/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4576 - accuracy: 0.7336\n","Epoch 58/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4574 - accuracy: 0.7290\n","Epoch 59/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4569 - accuracy: 0.7318\n","Epoch 60/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4573 - accuracy: 0.7319\n","Epoch 61/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4567 - accuracy: 0.7337\n","Epoch 62/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4570 - accuracy: 0.7304\n","Epoch 63/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4572 - accuracy: 0.7312\n","Epoch 64/100\n","804/804 [==============================] - 14s 18ms/step - loss: 0.4567 - accuracy: 0.7318\n","Epoch 65/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4568 - accuracy: 0.7298\n","Epoch 66/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4569 - accuracy: 0.7313\n","Epoch 67/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4566 - accuracy: 0.7320\n","Epoch 68/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4566 - accuracy: 0.7310\n","Epoch 69/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4567 - accuracy: 0.7309\n","Epoch 70/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4566 - accuracy: 0.7320\n","Epoch 71/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4564 - accuracy: 0.7318\n","Epoch 72/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4573 - accuracy: 0.7317\n","Epoch 73/100\n","804/804 [==============================] - 14s 18ms/step - loss: 0.4575 - accuracy: 0.7314\n","Epoch 74/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4568 - accuracy: 0.7320\n","Epoch 75/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4563 - accuracy: 0.7325\n","Epoch 76/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4569 - accuracy: 0.7328\n","Epoch 77/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4563 - accuracy: 0.7321\n","Epoch 78/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4571 - accuracy: 0.7312\n","Epoch 79/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4573 - accuracy: 0.7318\n","Epoch 80/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4561 - accuracy: 0.7306\n","Epoch 81/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4561 - accuracy: 0.7322\n","Epoch 82/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4565 - accuracy: 0.7307\n","Epoch 83/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4562 - accuracy: 0.7339\n","Epoch 84/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4563 - accuracy: 0.7339\n","Epoch 85/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4566 - accuracy: 0.7326\n","Epoch 86/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4569 - accuracy: 0.7317\n","Epoch 87/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4561 - accuracy: 0.7326\n","Epoch 88/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4563 - accuracy: 0.7320\n","Epoch 89/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4562 - accuracy: 0.7306\n","Epoch 90/100\n","804/804 [==============================] - 14s 18ms/step - loss: 0.4560 - accuracy: 0.7316\n","Epoch 91/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4559 - accuracy: 0.7312\n","Epoch 92/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4564 - accuracy: 0.7327\n","Epoch 93/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4559 - accuracy: 0.7325\n","Epoch 94/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4560 - accuracy: 0.7315\n","Epoch 95/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4566 - accuracy: 0.7319\n","Epoch 96/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4570 - accuracy: 0.7313\n","Epoch 97/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4560 - accuracy: 0.7337\n","Epoch 98/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4568 - accuracy: 0.7332\n","Epoch 99/100\n","804/804 [==============================] - 13s 16ms/step - loss: 0.4563 - accuracy: 0.7320\n","Epoch 100/100\n","804/804 [==============================] - 12s 15ms/step - loss: 0.4556 - accuracy: 0.7335\n"]}]},{"cell_type":"code","source":["# Evaluate the model using the test data\n","model_loss, model_accuracy = nn.evaluate(X_test_scaled,y_test,verbose=2)\n","print(f\"Loss: {model_loss}, Accuracy: {model_accuracy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bMOpFut-WxxQ","executionInfo":{"status":"ok","timestamp":1715570414265,"user_tz":300,"elapsed":4079,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}},"outputId":"86863129-f8d8-42af-d76e-2ab42047b858"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["268/268 - 2s - loss: 0.7178 - accuracy: 0.6167 - 2s/epoch - 7ms/step\n","Loss: 0.7178109884262085, Accuracy: 0.616676390171051\n"]}]},{"cell_type":"code","source":["# Export our model to HDF5 file\n","nn.save(\"AlphabetSoupCharity_Optimization.h5\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v5vBlMB3W3sj","executionInfo":{"status":"ok","timestamp":1715570438117,"user_tz":300,"elapsed":128,"user":{"displayName":"Rebecca Richardson","userId":"16969026335070918712"}},"outputId":"de4a2768-491b-4027-8bbd-3b9fd25c9c32"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}]}]}